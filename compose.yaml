version: '3.8'

services:

  # API

  catalog.api:
    image: catalog.api
    build:
      context: .
      dockerfile: Src/ProcessUnits/Catalog/Catalog.Api/Dockerfile

  order.webapi:
    image: order.webapi
    build:
      context: .
      dockerfile: Src/ProcessUnits/Order/Order.WebApi/Dockerfile

  identity.api:
    image: identity.api
    build:
      context: .
      dockerfile: Src/ProcessUnits/Identity/Identity.Api/Dockerfile

  # Redis

  redis_order:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - /path/to/local/order-data:/data
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=my-password

  redis_catalog:
    image: redis:latest
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - /path/to/local/catalog-data:/data
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=my-password

  redis_identity:
    image: redis:latest
    restart: always
    ports:
      - "6381:6379"
    volumes:
      - /path/to/local/identity-data:/data
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=my-password

  # SQL Server

  sql_server_order:
    image: mcr.microsoft.com/mssql/server
    restart: always
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "admin123!"
    ports:
      - 1434:1433
    volumes:
      - sqlserver-order:/var/opt/mssql

  sql_server_catalog:
    image: mcr.microsoft.com/mssql/server
    restart: always
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "admin123!"
    ports:
      - 1435:1433
    volumes:
      - sqlserver-catalog:/var/opt/mssql

  sql_server_identity:
    image: mcr.microsoft.com/mssql/server
    restart: always
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "admin123!"
    ports:
      - 1436:1433
    volumes:
      - sqlserver-identity:/var/opt/mssql

  # Kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    depends_on:
      - kafka-broker-1
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT_INTERNAL://localhost:19092
      SCHEMA_REGISTRY_DEBUG: 'true'

  kafka-broker-1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker-1
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  sqlserver-identity:
  sqlserver-order:
  sqlserver-catalog:
